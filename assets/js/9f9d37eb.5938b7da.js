"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9930],{5318:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>m});var n=a(7378);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),k=s(a),m=r,u=k["".concat(p,".").concat(m)]||k[m]||c[m]||l;return a?n.createElement(u,o(o({ref:t},d),{},{components:a})):n.createElement(u,o({ref:t},d))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=k;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var s=2;s<l;s++)o[s]=a[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},6099:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var n=a(5773),r=(a(7378),a(5318));const l={id:"VoxelInteract",title:"Class: VoxelInteract",sidebar_label:"VoxelInteract",sidebar_position:0,custom_edit_url:null},o=void 0,i={unversionedId:"api/classes/VoxelInteract",id:"api/classes/VoxelInteract",title:"Class: VoxelInteract",description:"The VoxelInteract class is used to interact with voxels in the World instance. It consists of two main parts:",source:"@site/docs/api/classes/VoxelInteract.md",sourceDirName:"api/classes",slug:"/api/classes/VoxelInteract",permalink:"/docs/api/classes/VoxelInteract",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"VoxelInteract",title:"Class: VoxelInteract",sidebar_label:"VoxelInteract",sidebar_position:0,custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"TextureAtlas",permalink:"/docs/api/classes/TextureAtlas"},next:{title:"WorkerPool",permalink:"/docs/api/classes/WorkerPool"}},p={},s=[{value:"Hierarchy",id:"hierarchy",level:2},{value:"Properties",id:"properties",level:2},{value:"active",id:"active",level:3},{value:"object",id:"object",level:3},{value:"params",id:"params",level:3},{value:"potential",id:"potential",level:3},{value:"Type declaration",id:"type-declaration",level:4},{value:"target",id:"target",level:3},{value:"world",id:"world",level:3},{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Overrides",id:"overrides",level:4},{value:"Accessors",id:"accessors",level:2},{value:"lookingAt",id:"lookingat",level:3},{value:"Returns",id:"returns",level:4},{value:"Methods",id:"methods",level:2},{value:"toggle",id:"toggle",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"update",id:"update",level:3},{value:"Returns",id:"returns-2",level:4}],d={toc:s};function c(e){let{components:t,...l}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The VoxelInteract class is used to interact with voxels in the ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/World"},"World")," instance. It consists of two main parts:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/api/classes/VoxelInteract#potential"},"potential"),": The potential block placement. This is the data of a block's orientation that can be placed."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/api/classes/VoxelInteract#target"},"target"),": The targeted block. This is the voxel that the camera is looking at.")),(0,r.kt)("p",null,"You can use these two properties to place blocks, remove blocks, and more."),(0,r.kt)("h1",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"// Create a new VoxelInteract instance.\nconst voxelInteract = new VoxelInteract(camera, world);\n\n// Add the voxel interact to the scene.\nworld.add(voxelInteract);\n\n// Set the target block to air.\nif (voxelInteract.target) {\n  const [vx, vy, vz] = voxelInteract.target;\n  world.updateVoxel(vx, vy, vz, 0);\n}\n\n// Update the interaction every frame.\nvoxelInteract.update();\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"VoxelInteract",src:a(4136).Z,width:"2560",height:"1440"})),(0,r.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Group")),(0,r.kt)("p",{parentName:"li"},"\u21b3 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"VoxelInteract"))))),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("h3",{id:"active"},"active"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"active"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")," = ",(0,r.kt)("inlineCode",{parentName:"p"},"true")),(0,r.kt)("p",null,"Whether or not is this ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/VoxelInteract"},"VoxelInteract")," instance currently active."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"object"},"object"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"object"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object3D"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Event"),">"),(0,r.kt)("p",null,"The object that the interactions should be raycasting from."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"params"},"params"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"params"),": ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/modules#voxelinteractparams"},(0,r.kt)("inlineCode",{parentName:"a"},"VoxelInteractParams"))),(0,r.kt)("p",null,"Parameters to customize the ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/VoxelInteract"},"VoxelInteract")," instance."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"potential"},"potential"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"potential"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"The potential orientation and location of the block placement. If no block placement is possible, this will be ",(0,r.kt)("inlineCode",{parentName:"p"},"null"),"."),(0,r.kt)("h4",{id:"type-declaration"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"rotation")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The rotation that the block placement's major axis should be facing.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"voxel")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/docs/api/modules#coords3"},(0,r.kt)("inlineCode",{parentName:"a"},"Coords3"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The 3D coordinates of the potential block placement.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"yRotation")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The rotation along the Y axis that the block placement's major axis should be facing. This only works if rotation is ",(0,r.kt)("a",{parentName:"td",href:"/docs/api/modules#py_rotation"},"PY_ROTATION")," or ",(0,r.kt)("a",{parentName:"td",href:"/docs/api/modules#ny_rotation"},"NY_ROTATION"),".")))),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"target"},"target"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"target"),": ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/modules#coords3"},(0,r.kt)("inlineCode",{parentName:"a"},"Coords3"))),(0,r.kt)("p",null,"The targeted voxel coordinates of the block that the camera is looking at. If no block is targeted, this will be ",(0,r.kt)("inlineCode",{parentName:"p"},"null"),"."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"world"},"world"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"world"),": ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/World"},(0,r.kt)("inlineCode",{parentName:"a"},"World"))),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/World"},"World")," instance that the interactions should be raycasting in."),(0,r.kt)("h2",{id:"constructors"},"Constructors"),(0,r.kt)("h3",{id:"constructor"},"constructor"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"new VoxelInteract"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"object"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"world"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"params?"),")"),(0,r.kt)("p",null,"Create a new VoxelInteract instance."),(0,r.kt)("h4",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"object")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Object3D"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"Event"),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The object that the interactions should be raycasting from.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"world")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/docs/api/classes/World"},(0,r.kt)("inlineCode",{parentName:"a"},"World"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The ",(0,r.kt)("a",{parentName:"td",href:"/docs/api/classes/World"},"World")," instance that the interactions should be raycasting in.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"params")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Partial"),"<",(0,r.kt)("a",{parentName:"td",href:"/docs/api/modules#voxelinteractparams"},(0,r.kt)("inlineCode",{parentName:"a"},"VoxelInteractParams")),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Parameters to customize the ",(0,r.kt)("a",{parentName:"td",href:"/docs/api/classes/VoxelInteract"},"VoxelInteract")," instance.")))),(0,r.kt)("h4",{id:"overrides"},"Overrides"),(0,r.kt)("p",null,"Group.constructor"),(0,r.kt)("h2",{id:"accessors"},"Accessors"),(0,r.kt)("h3",{id:"lookingat"},"lookingAt"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"get")," ",(0,r.kt)("strong",{parentName:"p"},"lookingAt"),"(): ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/modules#block"},(0,r.kt)("inlineCode",{parentName:"a"},"Block"))),(0,r.kt)("p",null,"Get the voxel ID of the targeted voxel. ",(0,r.kt)("inlineCode",{parentName:"p"},"null")," if no voxel is targeted."),(0,r.kt)("h4",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api/modules#block"},(0,r.kt)("inlineCode",{parentName:"a"},"Block"))),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("h3",{id:"toggle"},"toggle"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"toggle"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"force?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"Toggle on/off of this ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/VoxelInteract"},"VoxelInteract")," instance."),(0,r.kt)("h4",{id:"parameters-1"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"force")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"any")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"null")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether or not should it be a forceful toggle on/off. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"null"),".")))),(0,r.kt)("h4",{id:"returns-1"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"update"},"update"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"update"),"(): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"Raycasts from the given object's position and direction to find the targeted voxel and potential block placement.\nIf no block is targeted, then ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/VoxelInteract#target"},"target")," and ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/VoxelInteract#potential"},"potential")," will both be ",(0,r.kt)("inlineCode",{parentName:"p"},"null"),"."),(0,r.kt)("h4",{id:"returns-2"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")))}c.isMDXComponent=!0},4136:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/voxel-interact-2fff53aee5d7932c6fa5f83442fd1c48.png"}}]);