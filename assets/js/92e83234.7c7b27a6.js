"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5068],{5318:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>f});var a=r(7378);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=a.createContext({}),c=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,p=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),m=c(r),f=n,k=m["".concat(p,".").concat(f)]||m[f]||s[f]||l;return r?a.createElement(k,o(o({ref:t},d),{},{components:r})):a.createElement(k,o({ref:t},d))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,o=new Array(l);o[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var c=2;c<l;c++)o[c]=r[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},534:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>s,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var a=r(5773),n=(r(7378),r(5318));const l={id:"BlockOverlayEffect",title:"Class: BlockOverlayEffect",sidebar_label:"BlockOverlayEffect",sidebar_position:0,custom_edit_url:null},o=void 0,i={unversionedId:"api/classes/BlockOverlayEffect",id:"api/classes/BlockOverlayEffect",title:"Class: BlockOverlayEffect",description:"The block overlay effect is used to add a color blend whenever the camera is inside certain types of blocks.",source:"@site/docs/api/classes/BlockOverlayEffect.md",sourceDirName:"api/classes",slug:"/api/classes/BlockOverlayEffect",permalink:"/docs/api/classes/BlockOverlayEffect",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"BlockOverlayEffect",title:"Class: BlockOverlayEffect",sidebar_label:"BlockOverlayEffect",sidebar_position:0,custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"BlockBreakParticles",permalink:"/docs/api/classes/BlockBreakParticles"},next:{title:"BlockRotation",permalink:"/docs/api/classes/BlockRotation"}},p={},c=[{value:"Hierarchy",id:"hierarchy",level:2},{value:"Methods",id:"methods",level:2},{value:"addOverlay",id:"addoverlay",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Properties",id:"properties",level:2},{value:"camera",id:"camera",level:3},{value:"world",id:"world",level:3},{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Overrides",id:"overrides",level:4}],d={toc:c};function s(e){let{components:t,...l}=e;return(0,n.kt)("wrapper",(0,a.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"The block overlay effect is used to add a color blend whenever the camera is inside certain types of blocks."),(0,n.kt)("p",null,"This module is dependent on the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/pmndrs/postprocessing"},(0,n.kt)("inlineCode",{parentName:"a"},"postprocessing"))," package."),(0,n.kt)("h1",{id:"example"},"Example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'import { EffectComposer, RenderPass } from "postprocessing";\n\nconst composer = new EffectComposer(renderer);\ncomposer.addPass(new RenderPass(world, camera));\n\nconst overlayEffect = new VOXELIZE.BlockOverlayEffect(world, camera);\noverlayEffect.addOverlay("water", new THREE.Color("#5F9DF7"), 0.05);\n\ncomposer.addPass(\n  new EffectPass(camera, overlayEffect)\n);\n')),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Block overlay effect",src:r(1948).Z,width:"2560",height:"1440"})),(0,n.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"Effect")),(0,n.kt)("p",{parentName:"li"},"\u21b3 ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("inlineCode",{parentName:"strong"},"BlockOverlayEffect"))))),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("h3",{id:"addoverlay"},"addOverlay"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"addOverlay"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"idOrName"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"color"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"opacity"),"): ",(0,n.kt)("inlineCode",{parentName:"p"},"void")),(0,n.kt)("p",null,"Add a new overlay to a certain voxel type."),(0,n.kt)("h4",{id:"parameters"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"idOrName")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,n.kt)("inlineCode",{parentName:"td"},"number")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The block ID or name to add an overlay for.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"color")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"Color")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The color of the overlay.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"opacity")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"number")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The opacity of the overlay.")))),(0,n.kt)("h4",{id:"returns"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"void")),(0,n.kt)("h2",{id:"properties"},"Properties"),(0,n.kt)("h3",{id:"camera"},"camera"),(0,n.kt)("p",null,"\u2022 ",(0,n.kt)("strong",{parentName:"p"},"camera"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"PerspectiveCamera")),(0,n.kt)("p",null,"The camera that the effect is applied to."),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"world"},"world"),(0,n.kt)("p",null,"\u2022 ",(0,n.kt)("strong",{parentName:"p"},"world"),": ",(0,n.kt)("a",{parentName:"p",href:"/docs/api/classes/World"},(0,n.kt)("inlineCode",{parentName:"a"},"World"))),(0,n.kt)("p",null,"The world that the effect is in."),(0,n.kt)("h2",{id:"constructors"},"Constructors"),(0,n.kt)("h3",{id:"constructor"},"constructor"),(0,n.kt)("p",null,"\u2022 ",(0,n.kt)("strong",{parentName:"p"},"new BlockOverlayEffect"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"world"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"camera"),")"),(0,n.kt)("p",null,"Create a new block overlay effect."),(0,n.kt)("h4",{id:"parameters-1"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"world")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/docs/api/classes/World"},(0,n.kt)("inlineCode",{parentName:"a"},"World"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"The world that the effect is in.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"camera")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"PerspectiveCamera")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The camera that the effect is applied to.")))),(0,n.kt)("h4",{id:"overrides"},"Overrides"),(0,n.kt)("p",null,"Effect.constructor"))}s.isMDXComponent=!0},1948:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/overlay-f42dbebe8fc7e047a24913acffd4dc67.png"}}]);