"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4654],{3792:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>d,contentTitle:()=>l,default:()=>a,frontMatter:()=>r,metadata:()=>c,toc:()=>h});var n=t(4246),i=t(1670);const r={id:"Perspective",title:"Class: Perspective",sidebar_label:"Perspective",sidebar_position:0,custom_edit_url:null},l="Example",c={id:"client/classes/Perspective",title:"Class: Perspective",description:"A class that allows you to switch between first, second and third person perspectives for",source:"@site/docs/api/client/classes/Perspective.md",sourceDirName:"client/classes",slug:"/client/classes/Perspective",permalink:"/api/client/classes/Perspective",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"Perspective",title:"Class: Perspective",sidebar_label:"Perspective",sidebar_position:0,custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"Peers",permalink:"/api/client/classes/Peers"},next:{title:"Portrait",permalink:"/api/client/classes/Portrait"}},d={},h=[{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Properties",id:"properties",level:2},{value:"INPUT_IDENTIFIER",id:"input_identifier",level:3},{value:"controls",id:"controls",level:3},{value:"inputs",id:"inputs",level:3},{value:"onChangeState",id:"onchangestate",level:3},{value:"Type declaration",id:"type-declaration",level:4},{value:"Parameters",id:"parameters-1",level:5},{value:"Returns",id:"returns-1",level:5},{value:"options",id:"options",level:3},{value:"world",id:"world",level:3},{value:"Accessors",id:"accessors",level:2},{value:"state",id:"state",level:3},{value:"Returns",id:"returns-2",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Methods",id:"methods",level:2},{value:"connect",id:"connect",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Returns",id:"returns-5",level:5},{value:"toggle",id:"toggle",level:3},{value:"Returns",id:"returns-6",level:4},{value:"update",id:"update",level:3},{value:"Returns",id:"returns-7",level:4}];function o(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",hr:"hr",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(s.p,{children:["A class that allows you to switch between first, second and third person perspectives for\na ",(0,n.jsx)(s.a,{href:"/api/client/classes/RigidControls",children:"RigidControls"})," instance. By default, the key to switch between perspectives is ",(0,n.jsx)("kbd",{children:"C"}),"."]}),"\n",(0,n.jsx)(s.h1,{id:"example",children:"Example"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",children:'// Initialize the perspective with the rigid controls.\nconst perspective = new VOXELIZE.Perspective(controls, world);\n\n// Bind the keyboard inputs to switch between perspectives.\nperspective.connect(inputs, "in-game");\n\n// Switch to the first person perspective.\nperspective.state = "third";\n\n// Update the perspective every frame.\nperspective.update();\n'})}),"\n",(0,n.jsx)(s.h2,{id:"constructors",children:"Constructors"}),"\n",(0,n.jsx)(s.h3,{id:"constructor",children:"constructor"}),"\n",(0,n.jsxs)(s.p,{children:["\u2022 ",(0,n.jsx)(s.strong,{children:"new Perspective"}),"(",(0,n.jsx)(s.code,{children:"controls"}),", ",(0,n.jsx)(s.code,{children:"world"}),", ",(0,n.jsx)(s.code,{children:"options?"}),"): ",(0,n.jsx)(s.a,{href:"/api/client/classes/Perspective",children:(0,n.jsx)(s.code,{children:"Perspective"})})]}),"\n",(0,n.jsx)(s.p,{children:"Create a new perspective instance that is attached to the given rigid controls. The default\nperspective is the first person perspective."}),"\n",(0,n.jsx)(s.h4,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{style:{textAlign:"left"},children:"Name"}),(0,n.jsx)(s.th,{style:{textAlign:"left"},children:"Type"}),(0,n.jsx)(s.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{style:{textAlign:"left"},children:(0,n.jsx)(s.code,{children:"controls"})}),(0,n.jsx)(s.td,{style:{textAlign:"left"},children:(0,n.jsx)(s.a,{href:"/api/client/classes/RigidControls",children:(0,n.jsx)(s.code,{children:"RigidControls"})})}),(0,n.jsx)(s.td,{style:{textAlign:"left"},children:"The rigid controls that this perspective instance is attached to."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{style:{textAlign:"left"},children:(0,n.jsx)(s.code,{children:"world"})}),(0,n.jsx)(s.td,{style:{textAlign:"left"},children:(0,n.jsx)(s.a,{href:"/api/client/classes/World",children:(0,n.jsx)(s.code,{children:"World"})})}),(0,n.jsx)(s.td,{style:{textAlign:"left"},children:"The world that this perspective instance is working with."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{style:{textAlign:"left"},children:(0,n.jsx)(s.code,{children:"options"})}),(0,n.jsxs)(s.td,{style:{textAlign:"left"},children:[(0,n.jsx)(s.code,{children:"Partial"}),"<",(0,n.jsx)(s.a,{href:"/api/client/modules#perspectiveoptions",children:(0,n.jsx)(s.code,{children:"PerspectiveOptions"})}),">"]}),(0,n.jsx)(s.td,{style:{textAlign:"left"},children:"Parameters to configure the perspective."})]})]})]}),"\n",(0,n.jsx)(s.h4,{id:"returns",children:"Returns"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.a,{href:"/api/client/classes/Perspective",children:(0,n.jsx)(s.code,{children:"Perspective"})})}),"\n",(0,n.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsx)(s.h3,{id:"input_identifier",children:"INPUT_IDENTIFIER"}),"\n",(0,n.jsxs)(s.p,{children:["\u25aa ",(0,n.jsx)(s.code,{children:"Static"})," ",(0,n.jsx)(s.code,{children:"Readonly"})," ",(0,n.jsx)(s.strong,{children:"INPUT_IDENTIFIER"}),": ",(0,n.jsx)(s.code,{children:'"voxelize-perspective"'})]}),"\n",(0,n.jsxs)(s.p,{children:["This is the identifier that is used to bind the perspective's keyboard inputs\nwhen ",(0,n.jsx)(s.a,{href:"/api/client/classes/Perspective#connect",children:"Perspective.connect"})," is called."]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h3,{id:"controls",children:"controls"}),"\n",(0,n.jsxs)(s.p,{children:["\u2022 ",(0,n.jsx)(s.strong,{children:"controls"}),": ",(0,n.jsx)(s.a,{href:"/api/client/classes/RigidControls",children:(0,n.jsx)(s.code,{children:"RigidControls"})})]}),"\n",(0,n.jsx)(s.p,{children:"The rigid controls that this perspective instance is attached to."}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h3,{id:"inputs",children:"inputs"}),"\n",(0,n.jsxs)(s.p,{children:["\u2022 ",(0,n.jsx)(s.code,{children:"Optional"})," ",(0,n.jsx)(s.strong,{children:"inputs"}),": ",(0,n.jsx)(s.a,{href:"/api/client/classes/Inputs",children:(0,n.jsx)(s.code,{children:"Inputs"})}),"<",(0,n.jsx)(s.code,{children:"any"}),">"]}),"\n",(0,n.jsx)(s.p,{children:"The input manager that binds the perspective's keyboard inputs."}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h3,{id:"onchangestate",children:"onChangeState"}),"\n",(0,n.jsxs)(s.p,{children:["\u2022 ",(0,n.jsx)(s.strong,{children:"onChangeState"}),": (",(0,n.jsx)(s.code,{children:"state"}),": ",(0,n.jsx)(s.code,{children:'"first"'})," | ",(0,n.jsx)(s.code,{children:'"second"'})," | ",(0,n.jsx)(s.code,{children:'"third"'}),") => ",(0,n.jsx)(s.code,{children:"void"})]}),"\n",(0,n.jsx)(s.h4,{id:"type-declaration",children:"Type declaration"}),"\n",(0,n.jsxs)(s.p,{children:["\u25b8 (",(0,n.jsx)(s.code,{children:"state"}),"): ",(0,n.jsx)(s.code,{children:"void"})]}),"\n",(0,n.jsx)(s.p,{children:"A method that can be implemented and is called when the perspective's state changes."}),"\n",(0,n.jsx)(s.h5,{id:"parameters-1",children:"Parameters"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{style:{textAlign:"left"},children:"Name"}),(0,n.jsx)(s.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,n.jsx)(s.tbody,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{style:{textAlign:"left"},children:(0,n.jsx)(s.code,{children:"state"})}),(0,n.jsxs)(s.td,{style:{textAlign:"left"},children:[(0,n.jsx)(s.code,{children:'"first"'})," | ",(0,n.jsx)(s.code,{children:'"second"'})," | ",(0,n.jsx)(s.code,{children:'"third"'})]})]})})]}),"\n",(0,n.jsx)(s.h5,{id:"returns-1",children:"Returns"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.code,{children:"void"})}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h3,{id:"options",children:"options"}),"\n",(0,n.jsxs)(s.p,{children:["\u2022 ",(0,n.jsx)(s.strong,{children:"options"}),": ",(0,n.jsx)(s.a,{href:"/api/client/modules#perspectiveoptions",children:(0,n.jsx)(s.code,{children:"PerspectiveOptions"})})]}),"\n",(0,n.jsx)(s.p,{children:"Parameters to configure the perspective."}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h3,{id:"world",children:"world"}),"\n",(0,n.jsxs)(s.p,{children:["\u2022 ",(0,n.jsx)(s.strong,{children:"world"}),": ",(0,n.jsx)(s.a,{href:"/api/client/classes/World",children:(0,n.jsx)(s.code,{children:"World"})})]}),"\n",(0,n.jsx)(s.p,{children:"The world that this perspective instance is working with."}),"\n",(0,n.jsx)(s.h2,{id:"accessors",children:"Accessors"}),"\n",(0,n.jsx)(s.h3,{id:"state",children:"state"}),"\n",(0,n.jsxs)(s.p,{children:["\u2022 ",(0,n.jsx)(s.code,{children:"get"})," ",(0,n.jsx)(s.strong,{children:"state"}),"(): ",(0,n.jsx)(s.code,{children:'"first"'})," | ",(0,n.jsx)(s.code,{children:'"second"'})," | ",(0,n.jsx)(s.code,{children:'"third"'})]}),"\n",(0,n.jsx)(s.p,{children:"Getter for the perspective's state."}),"\n",(0,n.jsx)(s.h4,{id:"returns-2",children:"Returns"}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:'"first"'})," | ",(0,n.jsx)(s.code,{children:'"second"'})," | ",(0,n.jsx)(s.code,{children:'"third"'})]}),"\n",(0,n.jsxs)(s.p,{children:["\u2022 ",(0,n.jsx)(s.code,{children:"set"})," ",(0,n.jsx)(s.strong,{children:"state"}),"(",(0,n.jsx)(s.code,{children:"state"}),"): ",(0,n.jsx)(s.code,{children:"void"})]}),"\n",(0,n.jsxs)(s.p,{children:["Setter for the perspective's state. This will call ",(0,n.jsx)(s.a,{href:"/api/client/classes/Perspective#onchangestate",children:"Perspective.onChangeState"})," if it is implemented."]}),"\n",(0,n.jsx)(s.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{style:{textAlign:"left"},children:"Name"}),(0,n.jsx)(s.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,n.jsx)(s.tbody,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{style:{textAlign:"left"},children:(0,n.jsx)(s.code,{children:"state"})}),(0,n.jsxs)(s.td,{style:{textAlign:"left"},children:[(0,n.jsx)(s.code,{children:'"first"'})," | ",(0,n.jsx)(s.code,{children:'"second"'})," | ",(0,n.jsx)(s.code,{children:'"third"'})]})]})})]}),"\n",(0,n.jsx)(s.h4,{id:"returns-3",children:"Returns"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.code,{children:"void"})}),"\n",(0,n.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(s.h3,{id:"connect",children:"connect"}),"\n",(0,n.jsxs)(s.p,{children:["\u25b8 ",(0,n.jsx)(s.strong,{children:"connect"}),"(",(0,n.jsx)(s.code,{children:"inputs"}),", ",(0,n.jsx)(s.code,{children:"namespace?"}),"): () => ",(0,n.jsx)(s.code,{children:"void"})]}),"\n",(0,n.jsxs)(s.p,{children:["Connect the perspective to the given input manager. This will bind the perspective's keyboard inputs, which\nby default is ",(0,n.jsx)("kbd",{children:"C"})," to switch between perspectives. This function returns a function that when called\nunbinds the perspective's keyboard inputs. Keep in mind that remapping the original inputs will render this\nfunction useless."]}),"\n",(0,n.jsx)(s.h4,{id:"parameters-3",children:"Parameters"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{style:{textAlign:"left"},children:"Name"}),(0,n.jsx)(s.th,{style:{textAlign:"left"},children:"Type"}),(0,n.jsx)(s.th,{style:{textAlign:"left"},children:"Default value"}),(0,n.jsx)(s.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{style:{textAlign:"left"},children:(0,n.jsx)(s.code,{children:"inputs"})}),(0,n.jsxs)(s.td,{style:{textAlign:"left"},children:[(0,n.jsx)(s.a,{href:"/api/client/classes/Inputs",children:(0,n.jsx)(s.code,{children:"Inputs"})}),"<",(0,n.jsx)(s.code,{children:"any"}),">"]}),(0,n.jsx)(s.td,{style:{textAlign:"left"},children:(0,n.jsx)(s.code,{children:"undefined"})}),(0,n.jsxs)(s.td,{style:{textAlign:"left"},children:["The ",(0,n.jsx)(s.a,{href:"/api/client/classes/Inputs",children:"Inputs"})," instance to bind the perspective's keyboard inputs to."]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{style:{textAlign:"left"},children:(0,n.jsx)(s.code,{children:"namespace"})}),(0,n.jsx)(s.td,{style:{textAlign:"left"},children:(0,n.jsx)(s.code,{children:"string"})}),(0,n.jsx)(s.td,{style:{textAlign:"left"},children:(0,n.jsx)(s.code,{children:'"*"'})}),(0,n.jsx)(s.td,{style:{textAlign:"left"},children:"The namespace to bind the perspective's keyboard inputs to."})]})]})]}),"\n",(0,n.jsx)(s.h4,{id:"returns-4",children:"Returns"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.code,{children:"fn"})}),"\n",(0,n.jsxs)(s.p,{children:["\u25b8 (): ",(0,n.jsx)(s.code,{children:"void"})]}),"\n",(0,n.jsx)(s.h5,{id:"returns-5",children:"Returns"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.code,{children:"void"})}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h3,{id:"toggle",children:"toggle"}),"\n",(0,n.jsxs)(s.p,{children:["\u25b8 ",(0,n.jsx)(s.strong,{children:"toggle"}),"(): ",(0,n.jsx)(s.code,{children:"void"})]}),"\n",(0,n.jsx)(s.p,{children:"Toggle between the first, second and third person perspectives. The order goes from first person to\nthird person and then to second person."}),"\n",(0,n.jsx)(s.h4,{id:"returns-6",children:"Returns"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.code,{children:"void"})}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h3,{id:"update",children:"update"}),"\n",(0,n.jsxs)(s.p,{children:["\u25b8 ",(0,n.jsx)(s.strong,{children:"update"}),"(): ",(0,n.jsx)(s.code,{children:"void"})]}),"\n",(0,n.jsx)(s.p,{children:"This updates the perspective. Internally, if the perspective isn't in first person, it raycasts to find the closest\nblock and then ensures that the camera is not clipping into any blocks."}),"\n",(0,n.jsx)(s.h4,{id:"returns-7",children:"Returns"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.code,{children:"void"})})]})}function a(e={}){const{wrapper:s}={...(0,i.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}},1670:(e,s,t)=>{t.d(s,{Z:()=>c,a:()=>l});var n=t(7378);const i={},r=n.createContext(i);function l(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);