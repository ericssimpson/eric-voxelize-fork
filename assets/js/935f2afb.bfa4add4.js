"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Introduction","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"What is Voxelize?","href":"/docs/intro/what-is-voxelize","docId":"intro/what-is-voxelize"},{"type":"link","label":"Getting Started","href":"/docs/intro/getting-started","docId":"intro/getting-started"},{"type":"link","label":"Installation","href":"/docs/intro/installation","docId":"intro/installation"}]},{"type":"category","label":"The Basics","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Create the Server","href":"/docs/basics/create-the-server","docId":"basics/create-the-server"},{"type":"link","label":"Register Blocks","href":"/docs/basics/register-blocks","docId":"basics/register-blocks"},{"type":"link","label":"Create a World","href":"/docs/basics/create-a-world","docId":"basics/create-a-world"},{"type":"link","label":"Chunk Generation","href":"/docs/basics/chunk-generation","docId":"basics/chunk-generation"},{"type":"link","label":"Protocol Networking","href":"/docs/basics/protocol-networking","docId":"basics/protocol-networking"},{"type":"link","label":"Create the Client","href":"/docs/basics/create-the-client","docId":"basics/create-the-client"},{"type":"link","label":"Joining a World","href":"/docs/basics/joining-a-world","docId":"basics/joining-a-world"},{"type":"link","label":"Texturing Blocks","href":"/docs/basics/texturing-blocks","docId":"basics/texturing-blocks"}],"href":"/docs/category/the-basics"},{"type":"category","label":"Intermediate","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Entity Component System","href":"/docs/intermediate/entity-component-system","docId":"intermediate/entity-component-system"},{"type":"link","label":"the-client-entity","href":"/docs/intermediate/the-client-entity","docId":"intermediate/the-client-entity"},{"type":"link","label":"custom-entity-creation","href":"/docs/intermediate/custom-entity-creation","docId":"intermediate/custom-entity-creation"},{"type":"link","label":"metadata-component","href":"/docs/intermediate/metadata-component","docId":"intermediate/metadata-component"},{"type":"link","label":"customizing-the-ecs","href":"/docs/intermediate/customizing-the-ecs","docId":"intermediate/customizing-the-ecs"},{"type":"link","label":"network-interception","href":"/docs/intermediate/network-interception","docId":"intermediate/network-interception"},{"type":"link","label":"collision-detection","href":"/docs/intermediate/collision-detection","docId":"intermediate/collision-detection"},{"type":"link","label":"the-events-system","href":"/docs/intermediate/the-events-system","docId":"intermediate/the-events-system"},{"type":"link","label":"method-handling","href":"/docs/intermediate/method-handling","docId":"intermediate/method-handling"},{"type":"link","label":"chat-and-colored-text","href":"/docs/intermediate/chat-and-colored-text","docId":"intermediate/chat-and-colored-text"},{"type":"link","label":"custom-blocks","href":"/docs/intermediate/custom-blocks","docId":"intermediate/custom-blocks"},{"type":"link","label":"typescript-transport","href":"/docs/intermediate/typescript-transport","docId":"intermediate/typescript-transport"}],"href":"/docs/category/intermediate"},{"type":"category","label":"Extras","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Placeholder","href":"/docs/extras/test","docId":"extras/test"}],"href":"/docs/category/extras"},{"type":"category","label":"Client API","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Exports","href":"/docs/api/modules","docId":"api/modules"},{"type":"category","label":"Classes","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Arrow","href":"/docs/api/classes/Arrow","docId":"api/classes/Arrow"},{"type":"link","label":"BlockBreakParticles","href":"/docs/api/classes/BlockBreakParticles","docId":"api/classes/BlockBreakParticles"},{"type":"link","label":"BlockOverlayEffect","href":"/docs/api/classes/BlockOverlayEffect","docId":"api/classes/BlockOverlayEffect"},{"type":"link","label":"BlockRotation","href":"/docs/api/classes/BlockRotation","docId":"api/classes/BlockRotation"},{"type":"link","label":"BlockUtils","href":"/docs/api/classes/BlockUtils","docId":"api/classes/BlockUtils"},{"type":"link","label":"BoxLayer","href":"/docs/api/classes/BoxLayer","docId":"api/classes/BoxLayer"},{"type":"link","label":"CanvasBox","href":"/docs/api/classes/CanvasBox","docId":"api/classes/CanvasBox"},{"type":"link","label":"Character","href":"/docs/api/classes/Character","docId":"api/classes/Character"},{"type":"link","label":"Chat","href":"/docs/api/classes/Chat","docId":"api/classes/Chat"},{"type":"link","label":"Chunk","href":"/docs/api/classes/Chunk","docId":"api/classes/Chunk"},{"type":"link","label":"ChunkMesh","href":"/docs/api/classes/ChunkMesh","docId":"api/classes/ChunkMesh"},{"type":"link","label":"ChunkUtils","href":"/docs/api/classes/ChunkUtils","docId":"api/classes/ChunkUtils"},{"type":"link","label":"Chunks","href":"/docs/api/classes/Chunks","docId":"api/classes/Chunks"},{"type":"link","label":"Clouds","href":"/docs/api/classes/Clouds","docId":"api/classes/Clouds"},{"type":"link","label":"ColorText","href":"/docs/api/classes/ColorText","docId":"api/classes/ColorText"},{"type":"link","label":"DOMUtils","href":"/docs/api/classes/DOMUtils","docId":"api/classes/DOMUtils"},{"type":"link","label":"Debug","href":"/docs/api/classes/Debug","docId":"api/classes/Debug"},{"type":"link","label":"Entities","href":"/docs/api/classes/Entities","docId":"api/classes/Entities"},{"type":"link","label":"Events","href":"/docs/api/classes/Events","docId":"api/classes/Events"},{"type":"link","label":"ImageVoxelizer","href":"/docs/api/classes/ImageVoxelizer","docId":"api/classes/ImageVoxelizer"},{"type":"link","label":"Inputs","href":"/docs/api/classes/Inputs","docId":"api/classes/Inputs"},{"type":"link","label":"LightShined","href":"/docs/api/classes/LightShined","docId":"api/classes/LightShined"},{"type":"link","label":"LightUtils","href":"/docs/api/classes/LightUtils","docId":"api/classes/LightUtils"},{"type":"link","label":"MathUtils","href":"/docs/api/classes/MathUtils","docId":"api/classes/MathUtils"},{"type":"link","label":"NameTag","href":"/docs/api/classes/NameTag","docId":"api/classes/NameTag"},{"type":"link","label":"Network","href":"/docs/api/classes/Network","docId":"api/classes/Network"},{"type":"link","label":"Peers","href":"/docs/api/classes/Peers","docId":"api/classes/Peers"},{"type":"link","label":"Perspective","href":"/docs/api/classes/Perspective","docId":"api/classes/Perspective"},{"type":"link","label":"Registry","href":"/docs/api/classes/Registry","docId":"api/classes/Registry"},{"type":"link","label":"Rigid","href":"/docs/api/classes/Rigid","docId":"api/classes/Rigid"},{"type":"link","label":"RigidControls","href":"/docs/api/classes/RigidControls","docId":"api/classes/RigidControls"},{"type":"link","label":"Shadow","href":"/docs/api/classes/Shadow","docId":"api/classes/Shadow"},{"type":"link","label":"Shadows","href":"/docs/api/classes/Shadows","docId":"api/classes/Shadows"},{"type":"link","label":"Sky","href":"/docs/api/classes/Sky","docId":"api/classes/Sky"},{"type":"link","label":"SpriteText","href":"/docs/api/classes/SpriteText","docId":"api/classes/SpriteText"},{"type":"link","label":"TextureAtlas","href":"/docs/api/classes/TextureAtlas","docId":"api/classes/TextureAtlas"},{"type":"link","label":"VoxelInteract","href":"/docs/api/classes/VoxelInteract","docId":"api/classes/VoxelInteract"},{"type":"link","label":"WorkerPool","href":"/docs/api/classes/WorkerPool","docId":"api/classes/WorkerPool"},{"type":"link","label":"World","href":"/docs/api/classes/World","docId":"api/classes/World"}]},{"type":"category","label":"Interfaces","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"NetIntercept","href":"/docs/api/interfaces/NetIntercept","docId":"api/interfaces/NetIntercept"}]}]},{"type":"category","label":"Transport API","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Exports","href":"/docs/transport/modules","docId":"transport/modules"},{"type":"category","label":"Classes","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Transport","href":"/docs/transport/classes/Transport","docId":"transport/classes/Transport"}]}]},{"type":"link","label":"Server API","href":"https://docs.rs/voxelize/0.4.2/voxelize/","className":"server-api-button"}]},"docs":{"api/classes/Arrow":{"id":"api/classes/Arrow","title":"Class: Arrow","description":"A helper for visualizing a direction. This is useful for debugging.","sidebar":"tutorialSidebar"},"api/classes/BlockBreakParticles":{"id":"api/classes/BlockBreakParticles","title":"Class: BlockBreakParticles","description":"A particle system that emits particles when a block is broken. This system implements NetIntercept and","sidebar":"tutorialSidebar"},"api/classes/BlockOverlayEffect":{"id":"api/classes/BlockOverlayEffect","title":"Class: BlockOverlayEffect","description":"The block overlay effect is used to add a color blend whenever the camera is inside certain types of blocks.","sidebar":"tutorialSidebar"},"api/classes/BlockRotation":{"id":"api/classes/BlockRotation","title":"Class: BlockRotation","description":"A block rotation consists of two rotations: one is the axis this block is pointing towards,","sidebar":"tutorialSidebar"},"api/classes/BlockUtils":{"id":"api/classes/BlockUtils","title":"Class: BlockUtils","description":"A utility class for extracting and inserting voxel data from and into numbers.","sidebar":"tutorialSidebar"},"api/classes/BoxLayer":{"id":"api/classes/BoxLayer","title":"Class: BoxLayer","description":"A layer of a canvas box. This is a group of six canvases that are rendered as a single mesh.","sidebar":"tutorialSidebar"},"api/classes/CanvasBox":{"id":"api/classes/CanvasBox","title":"Class: CanvasBox","description":"A canvas box is a group of BoxLayers that are rendered as a single mesh.","sidebar":"tutorialSidebar"},"api/classes/Character":{"id":"api/classes/Character","title":"Class: Character","description":"The default Voxelize character. This can be used in Peers.createPeer to apply characters onto","sidebar":"tutorialSidebar"},"api/classes/Chat":{"id":"api/classes/Chat","title":"Class: Chat","description":"A network interceptor that gives flexible control over the chat feature of","sidebar":"tutorialSidebar"},"api/classes/Chunk":{"id":"api/classes/Chunk","title":"Class: Chunk","description":"A chunk is a chunkSize x maxHeight x chunkSize region of blocks. The data of each chunk is generated","sidebar":"tutorialSidebar"},"api/classes/ChunkMesh":{"id":"api/classes/ChunkMesh","title":"Class: ChunkMesh","description":"A chunk\'s mesh. This is a group of sub-chunks, each with their own mesh generated by the server.","sidebar":"tutorialSidebar"},"api/classes/Chunks":{"id":"api/classes/Chunks","title":"Class: Chunks","description":"Chunks is a map of chunks that are currently loaded or being loaded. This is","sidebar":"tutorialSidebar"},"api/classes/ChunkUtils":{"id":"api/classes/ChunkUtils","title":"Class: ChunkUtils","description":"A utility class for all things related to chunks and chunk coordinates.","sidebar":"tutorialSidebar"},"api/classes/Clouds":{"id":"api/classes/Clouds","title":"Class: Clouds","description":"A class that generates and manages clouds. Clouds are essentially a 2D grid of cells that contain further sub-grids of","sidebar":"tutorialSidebar"},"api/classes/ColorText":{"id":"api/classes/ColorText","title":"Class: ColorText","description":"This module is used to separate plain text into colored text objects to be further rendered.","sidebar":"tutorialSidebar"},"api/classes/Debug":{"id":"api/classes/Debug","title":"Class: Debug","description":"A class for general debugging purposes in Voxelize, including FPS, value tracking, and real-time value testing.","sidebar":"tutorialSidebar"},"api/classes/DOMUtils":{"id":"api/classes/DOMUtils","title":"Class: DOMUtils","description":"A utility class for doing DOM manipulation.","sidebar":"tutorialSidebar"},"api/classes/Entities":{"id":"api/classes/Entities","title":"Class: Entities<T>","description":"A network interceptor that can be used to handle ENTITY messages. This is useful","sidebar":"tutorialSidebar"},"api/classes/Events":{"id":"api/classes/Events","title":"Class: Events","description":"A manager for any events interacting with the Voxelize server. This is useful","sidebar":"tutorialSidebar"},"api/classes/ImageVoxelizer":{"id":"api/classes/ImageVoxelizer","title":"Class: ImageVoxelizer","description":"A class that turns a given image into a mosaic of block textures registered in the World.","sidebar":"tutorialSidebar"},"api/classes/Inputs":{"id":"api/classes/Inputs","title":"Class: Inputs<T>","description":"A key and mouse binding manager for Voxelize.","sidebar":"tutorialSidebar"},"api/classes/LightShined":{"id":"api/classes/LightShined","title":"Class: LightShined","description":"A class that allows mesh to dynamically change brightness based on the voxel light level at their position.","sidebar":"tutorialSidebar"},"api/classes/LightUtils":{"id":"api/classes/LightUtils","title":"Class: LightUtils","description":"A utility class for extracting and inserting light data from and into numbers.","sidebar":"tutorialSidebar"},"api/classes/MathUtils":{"id":"api/classes/MathUtils","title":"Class: MathUtils","description":"A utility class for doing math operations.","sidebar":"tutorialSidebar"},"api/classes/NameTag":{"id":"api/classes/NameTag","title":"Class: NameTag","description":"A class that allows you to create a name tag mesh. This name tag mesh also supports colored text","sidebar":"tutorialSidebar"},"api/classes/Network":{"id":"api/classes/Network","title":"Class: Network","description":"A network connector to the Voxelize backend. Establishes a WebSocket connection to the backend","sidebar":"tutorialSidebar"},"api/classes/Peers":{"id":"api/classes/Peers","title":"Class: Peers<C, T>","description":"A class that allows you to add multiplayer functionality to your Voxelize game. This implements","sidebar":"tutorialSidebar"},"api/classes/Perspective":{"id":"api/classes/Perspective","title":"Class: Perspective","description":"A class that allows you to switch between first, second and third person perspectives for","sidebar":"tutorialSidebar"},"api/classes/Registry":{"id":"api/classes/Registry","title":"Class: Registry","description":"A client-side manager for blocks. This class will receive block data on connecting to a server, and will","sidebar":"tutorialSidebar"},"api/classes/Rigid":{"id":"api/classes/Rigid","title":"Class: Rigid","description":"A rigid behavior makes the particle act like a rigid body in the voxel physics engine.","sidebar":"tutorialSidebar"},"api/classes/RigidControls":{"id":"api/classes/RigidControls","title":"Class: RigidControls","description":"Inspired by THREE.JS\'s PointerLockControls, a rigid body based first person controls.","sidebar":"tutorialSidebar"},"api/classes/Shadow":{"id":"api/classes/Shadow","title":"Class: Shadow","description":"A shadow that is just a circle underneath an object that scales smaller with distance. Shadows ignore fluids.","sidebar":"tutorialSidebar"},"api/classes/Shadows":{"id":"api/classes/Shadows","title":"Class: Shadows","description":"A manager for all shadows in the world. Shadows should be updated every frame.","sidebar":"tutorialSidebar"},"api/classes/Sky":{"id":"api/classes/Sky","title":"Class: Sky","description":"Sky consists of both a large dodecahedron used to render the 3-leveled sky gradient and a CanvasBox that renders custom sky textures (","sidebar":"tutorialSidebar"},"api/classes/SpriteText":{"id":"api/classes/SpriteText","title":"Class: SpriteText","description":"A sprite that can be used to display text. This is highly inspired by the","sidebar":"tutorialSidebar"},"api/classes/TextureAtlas":{"id":"api/classes/TextureAtlas","title":"Class: TextureAtlas","description":"A texture atlas is a collection of textures that are packed into a single texture.","sidebar":"tutorialSidebar"},"api/classes/VoxelInteract":{"id":"api/classes/VoxelInteract","title":"Class: VoxelInteract","description":"The VoxelInteract class is used to interact with voxels in the World instance. It consists of two main parts:","sidebar":"tutorialSidebar"},"api/classes/WorkerPool":{"id":"api/classes/WorkerPool","title":"Class: WorkerPool","description":"A pool of web workers that can be used to execute jobs. The pool will create","sidebar":"tutorialSidebar"},"api/classes/World":{"id":"api/classes/World","title":"Class: World","description":"A Voxelize world handles the chunk loading and rendering, as well as any 3D objects.","sidebar":"tutorialSidebar"},"api/interfaces/NetIntercept":{"id":"api/interfaces/NetIntercept","title":"Interface: NetIntercept","description":"An interceptor for the network layer. When registered to a network","sidebar":"tutorialSidebar"},"api/modules":{"id":"api/modules","title":"@voxelize/client","description":"Core Classes","sidebar":"tutorialSidebar"},"basics/chunk-generation":{"id":"basics/chunk-generation","title":"Chunk Generation","description":"In this chapter, we learn about how to populate blocks into empty chunks, in parallel.","sidebar":"tutorialSidebar"},"basics/create-a-world":{"id":"basics/create-a-world","title":"Create a World","description":"With a server and two blocks, we are ready to create our first world.","sidebar":"tutorialSidebar"},"basics/create-the-client":{"id":"basics/create-the-client","title":"Create the Client","description":"","sidebar":"tutorialSidebar"},"basics/create-the-server":{"id":"basics/create-the-server","title":"Create the Server","description":"A Voxelize server is a very powerful HTTP based web server that handles most of the heavy-lifting you see in a Voxelize app, such as world terrain generation and meshing. These tasks are done on the server-side in a multi-threaded fashion, so that we can ensure the best user experience on the client-side.","sidebar":"tutorialSidebar"},"basics/joining-a-world":{"id":"basics/joining-a-world","title":"Joining a World","description":"","sidebar":"tutorialSidebar"},"basics/protocol-networking":{"id":"basics/protocol-networking","title":"Protocol Networking","description":"Before creating a client to connect to the server, let\'s dive deeper into creating","sidebar":"tutorialSidebar"},"basics/register-blocks":{"id":"basics/register-blocks","title":"Register Blocks","description":"A Voxelize world consists of tens of millions of blocks, so our first step after creating a server should be registering the blocks used across this server.","sidebar":"tutorialSidebar"},"basics/texturing-blocks":{"id":"basics/texturing-blocks","title":"Texturing Blocks","description":"","sidebar":"tutorialSidebar"},"extras/test":{"id":"extras/test","title":"Placeholder","description":"","sidebar":"tutorialSidebar"},"intermediate/chat-and-colored-text":{"id":"intermediate/chat-and-colored-text","title":"chat-and-colored-text","description":"","sidebar":"tutorialSidebar"},"intermediate/collision-detection":{"id":"intermediate/collision-detection","title":"collision-detection","description":"","sidebar":"tutorialSidebar"},"intermediate/custom-blocks":{"id":"intermediate/custom-blocks","title":"custom-blocks","description":"","sidebar":"tutorialSidebar"},"intermediate/custom-entity-creation":{"id":"intermediate/custom-entity-creation","title":"custom-entity-creation","description":"","sidebar":"tutorialSidebar"},"intermediate/customizing-the-ecs":{"id":"intermediate/customizing-the-ecs","title":"customizing-the-ecs","description":"","sidebar":"tutorialSidebar"},"intermediate/entity-component-system":{"id":"intermediate/entity-component-system","title":"Entity Component System","description":"Voxelize servers run on the Specs ECS crate. It is recommended to read through the Specs ECS tutorial before continuing.","sidebar":"tutorialSidebar"},"intermediate/metadata-component":{"id":"intermediate/metadata-component","title":"metadata-component","description":"","sidebar":"tutorialSidebar"},"intermediate/method-handling":{"id":"intermediate/method-handling","title":"method-handling","description":"","sidebar":"tutorialSidebar"},"intermediate/network-interception":{"id":"intermediate/network-interception","title":"network-interception","description":"","sidebar":"tutorialSidebar"},"intermediate/the-client-entity":{"id":"intermediate/the-client-entity","title":"the-client-entity","description":"","sidebar":"tutorialSidebar"},"intermediate/the-events-system":{"id":"intermediate/the-events-system","title":"the-events-system","description":"","sidebar":"tutorialSidebar"},"intermediate/typescript-transport":{"id":"intermediate/typescript-transport","title":"typescript-transport","description":"","sidebar":"tutorialSidebar"},"intro/getting-started":{"id":"intro/getting-started","title":"Getting Started","description":"This series of tutorials will be based on this example repository. We will be building a full-stack deployable app that teaches you the inner-workings of Voxelize.","sidebar":"tutorialSidebar"},"intro/installation":{"id":"intro/installation","title":"Installation","description":"Once the github repository is cloned, let\'s try to understand what is going on.","sidebar":"tutorialSidebar"},"intro/what-is-voxelize":{"id":"intro/what-is-voxelize","title":"What is Voxelize?","description":"Voxelize is an easy-to-use fullstack library to build fast, interactive, and creative voxel experiences.","sidebar":"tutorialSidebar"},"transport/classes/Transport":{"id":"transport/classes/Transport","title":"Class: Transport","description":"Hierarchy","sidebar":"tutorialSidebar"},"transport/modules":{"id":"transport/modules","title":"@voxelize/transport","description":"Classes","sidebar":"tutorialSidebar"}}}')}}]);