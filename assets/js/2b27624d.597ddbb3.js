"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1527],{5318:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var a=r(7378);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=a.createContext({}),s=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),k=s(r),m=n,c=k["".concat(p,".").concat(m)]||k[m]||d[m]||o;return r?a.createElement(c,l(l({ref:t},u),{},{components:r})):a.createElement(c,l({ref:t},u))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,l=new Array(o);l[0]=k;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var s=2;s<o;s++)l[s]=r[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}k.displayName="MDXCreateElement"},8322:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var a=r(5773),n=(r(7378),r(5318));const o={id:"WorkerPool",title:"Class: WorkerPool",sidebar_label:"WorkerPool",sidebar_position:0,custom_edit_url:null},l=void 0,i={unversionedId:"api/classes/WorkerPool",id:"api/classes/WorkerPool",title:"Class: WorkerPool",description:"A pool of web workers that can be used to execute jobs. The pool will create",source:"@site/docs/api/classes/WorkerPool.md",sourceDirName:"api/classes",slug:"/api/classes/WorkerPool",permalink:"/docs/api/classes/WorkerPool",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"WorkerPool",title:"Class: WorkerPool",sidebar_label:"WorkerPool",sidebar_position:0,custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"VoxelInteract",permalink:"/docs/api/classes/VoxelInteract"},next:{title:"World",permalink:"/docs/api/classes/World"}},p={},s=[{value:"Properties",id:"properties",level:2},{value:"Proto",id:"proto",level:3},{value:"Type declaration",id:"type-declaration",level:4},{value:"WORKING_COUNT",id:"working_count",level:3},{value:"params",id:"params",level:3},{value:"queue",id:"queue",level:3},{value:"Methods",id:"methods",level:2},{value:"addJob",id:"addjob",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Accessors",id:"accessors",level:2},{value:"isBusy",id:"isbusy",level:3},{value:"Returns",id:"returns-1",level:4},{value:"workingCount",id:"workingcount",level:3},{value:"Returns",id:"returns-2",level:4}],u={toc:s};function d(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"A pool of web workers that can be used to execute jobs. The pool will create\nworkers up to the maximum number of workers specified in the parameters.\nWhen a job is queued, the pool will find the first available worker and\nexecute the job. If no workers are available, the job will be queued until\na worker becomes available."),(0,n.kt)("h2",{id:"properties"},"Properties"),(0,n.kt)("h3",{id:"proto"},"Proto"),(0,n.kt)("p",null,"\u2022 ",(0,n.kt)("strong",{parentName:"p"},"Proto"),": () => ",(0,n.kt)("inlineCode",{parentName:"p"},"Worker")),(0,n.kt)("h4",{id:"type-declaration"},"Type declaration"),(0,n.kt)("p",null,"\u2022 ",(0,n.kt)("strong",{parentName:"p"},"new WorkerPool"),"()"),(0,n.kt)("p",null,"The worker class to create."),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"working_count"},"WORKING","_","COUNT"),(0,n.kt)("p",null,"\u25aa ",(0,n.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,n.kt)("strong",{parentName:"p"},"WORKING","_","COUNT"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"number")," = ",(0,n.kt)("inlineCode",{parentName:"p"},"0")),(0,n.kt)("p",null,"A static count of working web workers across all worker pools."),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"params"},"params"),(0,n.kt)("p",null,"\u2022 ",(0,n.kt)("strong",{parentName:"p"},"params"),": ",(0,n.kt)("a",{parentName:"p",href:"/docs/api/modules#workerpoolparams"},(0,n.kt)("inlineCode",{parentName:"a"},"WorkerPoolParams"))," = ",(0,n.kt)("inlineCode",{parentName:"p"},"defaultParams")),(0,n.kt)("p",null,"The parameters to create the worker pool."),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"queue"},"queue"),(0,n.kt)("p",null,"\u2022 ",(0,n.kt)("strong",{parentName:"p"},"queue"),": ",(0,n.kt)("a",{parentName:"p",href:"/docs/api/modules#workerpooljob"},(0,n.kt)("inlineCode",{parentName:"a"},"WorkerPoolJob")),"[] = ",(0,n.kt)("inlineCode",{parentName:"p"},"[]")),(0,n.kt)("p",null,"The queue of jobs that are waiting to be executed."),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("h3",{id:"addjob"},"addJob"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"addJob"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"job"),"): ",(0,n.kt)("inlineCode",{parentName:"p"},"void")),(0,n.kt)("p",null,"Append a new job to be executed by a worker."),(0,n.kt)("h4",{id:"parameters"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"job")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/docs/api/modules#workerpooljob"},(0,n.kt)("inlineCode",{parentName:"a"},"WorkerPoolJob"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"The job to queue.")))),(0,n.kt)("h4",{id:"returns"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"void")),(0,n.kt)("h2",{id:"constructors"},"Constructors"),(0,n.kt)("h3",{id:"constructor"},"constructor"),(0,n.kt)("p",null,"\u2022 ",(0,n.kt)("strong",{parentName:"p"},"new WorkerPool"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"Proto"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"params?"),")"),(0,n.kt)("p",null,"Create a new worker pool."),(0,n.kt)("h4",{id:"parameters-1"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"Proto")),(0,n.kt)("td",{parentName:"tr",align:"left"},"() => ",(0,n.kt)("inlineCode",{parentName:"td"},"Worker")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"undefined")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The worker class to create.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"params")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/docs/api/modules#workerpoolparams"},(0,n.kt)("inlineCode",{parentName:"a"},"WorkerPoolParams"))),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"defaultParams")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The parameters to create the worker pool.")))),(0,n.kt)("h2",{id:"accessors"},"Accessors"),(0,n.kt)("h3",{id:"isbusy"},"isBusy"),(0,n.kt)("p",null,"\u2022 ",(0,n.kt)("inlineCode",{parentName:"p"},"get")," ",(0,n.kt)("strong",{parentName:"p"},"isBusy"),"(): ",(0,n.kt)("inlineCode",{parentName:"p"},"boolean")),(0,n.kt)("p",null,"Whether or not are there no available workers."),(0,n.kt)("h4",{id:"returns-1"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"boolean")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"workingcount"},"workingCount"),(0,n.kt)("p",null,"\u2022 ",(0,n.kt)("inlineCode",{parentName:"p"},"get")," ",(0,n.kt)("strong",{parentName:"p"},"workingCount"),"(): ",(0,n.kt)("inlineCode",{parentName:"p"},"number")),(0,n.kt)("p",null,"The number of workers that are simultaneously working."),(0,n.kt)("h4",{id:"returns-2"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"number")))}d.isMDXComponent=!0}}]);