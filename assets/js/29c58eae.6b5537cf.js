"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8581],{5318:(e,t,a)=>{a.d(t,{Zo:()=>k,kt:()=>N});var n=a(7378);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),d=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},k=function(e){var t=d(e.components);return n.createElement(o.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,k=p(e,["components","mdxType","originalType","parentName"]),s=d(a),N=r,u=s["".concat(o,".").concat(N)]||s[N]||m[N]||l;return a?n.createElement(u,i(i({ref:t},k),{},{components:a})):n.createElement(u,i({ref:t},k))}));function N(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=s;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var d=2;d<l;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}s.displayName="MDXCreateElement"},7949:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>p,toc:()=>d});var n=a(5773),r=(a(7378),a(5318));const l={id:"World",title:"Class: World",sidebar_label:"World",sidebar_position:0,custom_edit_url:null},i=void 0,p={unversionedId:"client/classes/World",id:"client/classes/World",title:"Class: World",description:"A Voxelize world handles the chunk loading and rendering, as well as any 3D objects.",source:"@site/docs/api/client/classes/World.md",sourceDirName:"client/classes",slug:"/client/classes/World",permalink:"/api/client/classes/World",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"World",title:"Class: World",sidebar_label:"World",sidebar_position:0,custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"WorkerPool",permalink:"/api/client/classes/WorkerPool"},next:{title:"NetIntercept",permalink:"/api/client/interfaces/NetIntercept"}},o={},d=[{value:"Hierarchy",id:"hierarchy",level:2},{value:"Implements",id:"implements",level:2},{value:"Methods",id:"methods",level:2},{value:"addChunkInitListener",id:"addchunkinitlistener",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"applyTextureByName",id:"applytexturebyname",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"applyTexturesByNames",id:"applytexturesbynames",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"getBlockAABBsByVoxel",id:"getblockaabbsbyvoxel",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"getBlockAABBsByWorld",id:"getblockaabbsbyworld",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"getBlockById",id:"getblockbyid",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"getBlockByName",id:"getblockbyname",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"getBlockByTextureName",id:"getblockbytexturename",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-7",level:4},{value:"getBlockByVoxel",id:"getblockbyvoxel",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-8",level:4},{value:"getBlockByWorld",id:"getblockbyworld",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-9",level:4},{value:"getChunk",id:"getchunk",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-10",level:4},{value:"getChunkByName",id:"getchunkbyname",level:3},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-11",level:4},{value:"getChunkByVoxel",id:"getchunkbyvoxel",level:3},{value:"Parameters",id:"parameters-12",level:4},{value:"Returns",id:"returns-12",level:4},{value:"getLightColorByVoxel",id:"getlightcolorbyvoxel",level:3},{value:"Parameters",id:"parameters-13",level:4},{value:"Returns",id:"returns-13",level:4},{value:"getLightColorByWorld",id:"getlightcolorbyworld",level:3},{value:"Parameters",id:"parameters-14",level:4},{value:"Returns",id:"returns-14",level:4},{value:"getMaxHeightByVoxel",id:"getmaxheightbyvoxel",level:3},{value:"Parameters",id:"parameters-15",level:4},{value:"Returns",id:"returns-15",level:4},{value:"getMaxHeightByWorld",id:"getmaxheightbyworld",level:3},{value:"Parameters",id:"parameters-16",level:4},{value:"Returns",id:"returns-16",level:4},{value:"getMinBrightness",id:"getminbrightness",level:3},{value:"Returns",id:"returns-17",level:4},{value:"getPreviousVoxelByVoxel",id:"getpreviousvoxelbyvoxel",level:3},{value:"Parameters",id:"parameters-17",level:4},{value:"Returns",id:"returns-18",level:4},{value:"getPreviousVoxelByWorld",id:"getpreviousvoxelbyworld",level:3},{value:"Parameters",id:"parameters-18",level:4},{value:"Returns",id:"returns-19",level:4},{value:"getSunlightByVoxel",id:"getsunlightbyvoxel",level:3},{value:"Parameters",id:"parameters-19",level:4},{value:"Returns",id:"returns-20",level:4},{value:"getSunlightByWorld",id:"getsunlightbyworld",level:3},{value:"Parameters",id:"parameters-20",level:4},{value:"Returns",id:"returns-21",level:4},{value:"getSunlightIntensity",id:"getsunlightintensity",level:3},{value:"Returns",id:"returns-22",level:4},{value:"getTorchLightByVoxel",id:"gettorchlightbyvoxel",level:3},{value:"Parameters",id:"parameters-21",level:4},{value:"Returns",id:"returns-23",level:4},{value:"getTorchLightByWorld",id:"gettorchlightbyworld",level:3},{value:"Parameters",id:"parameters-22",level:4},{value:"Returns",id:"returns-24",level:4},{value:"getVoxelByVoxel",id:"getvoxelbyvoxel",level:3},{value:"Parameters",id:"parameters-23",level:4},{value:"Returns",id:"returns-25",level:4},{value:"getVoxelByWorld",id:"getvoxelbyworld",level:3},{value:"Parameters",id:"parameters-24",level:4},{value:"Returns",id:"returns-26",level:4},{value:"getVoxelRotationByVoxel",id:"getvoxelrotationbyvoxel",level:3},{value:"Parameters",id:"parameters-25",level:4},{value:"Returns",id:"returns-27",level:4},{value:"getVoxelRotationByWorld",id:"getvoxelrotationbyworld",level:3},{value:"Parameters",id:"parameters-26",level:4},{value:"Returns",id:"returns-28",level:4},{value:"getVoxelStageByVoxel",id:"getvoxelstagebyvoxel",level:3},{value:"Parameters",id:"parameters-27",level:4},{value:"Returns",id:"returns-29",level:4},{value:"getVoxelStageByWorld",id:"getvoxelstagebyworld",level:3},{value:"Parameters",id:"parameters-28",level:4},{value:"Returns",id:"returns-30",level:4},{value:"isChunkInView",id:"ischunkinview",level:3},{value:"Parameters",id:"parameters-29",level:4},{value:"Returns",id:"returns-31",level:4},{value:"isWithinWorld",id:"iswithinworld",level:3},{value:"Parameters",id:"parameters-30",level:4},{value:"Returns",id:"returns-32",level:4},{value:"makeBlockMesh",id:"makeblockmesh",level:3},{value:"Parameters",id:"parameters-31",level:4},{value:"Returns",id:"returns-33",level:4},{value:"reset",id:"reset",level:3},{value:"Returns",id:"returns-34",level:4},{value:"setFogColor",id:"setfogcolor",level:3},{value:"Parameters",id:"parameters-32",level:4},{value:"Returns",id:"returns-35",level:4},{value:"setFogDistance",id:"setfogdistance",level:3},{value:"Parameters",id:"parameters-33",level:4},{value:"Returns",id:"returns-36",level:4},{value:"setMinBrightness",id:"setminbrightness",level:3},{value:"Parameters",id:"parameters-34",level:4},{value:"Returns",id:"returns-37",level:4},{value:"setSunlightIntensity",id:"setsunlightintensity",level:3},{value:"Parameters",id:"parameters-35",level:4},{value:"Returns",id:"returns-38",level:4},{value:"update",id:"update",level:3},{value:"Parameters",id:"parameters-36",level:4},{value:"Returns",id:"returns-39",level:4},{value:"updateVoxel",id:"updatevoxel",level:3},{value:"Parameters",id:"parameters-37",level:4},{value:"Returns",id:"returns-40",level:4},{value:"updateVoxels",id:"updatevoxels",level:3},{value:"Parameters",id:"parameters-38",level:4},{value:"Returns",id:"returns-41",level:4},{value:"Properties",id:"properties",level:2},{value:"atlas",id:"atlas",level:3},{value:"blockCache",id:"blockcache",level:3},{value:"chunks",id:"chunks",level:3},{value:"initialized",id:"initialized",level:3},{value:"loader",id:"loader",level:3},{value:"materials",id:"materials",level:3},{value:"Type declaration",id:"type-declaration",level:4},{value:"params",id:"params",level:3},{value:"physics",id:"physics",level:3},{value:"registry",id:"registry",level:3},{value:"uniforms",id:"uniforms",level:3},{value:"Type declaration",id:"type-declaration-1",level:4},{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Parameters",id:"parameters-39",level:4},{value:"Overrides",id:"overrides",level:4},{value:"Accessors",id:"accessors",level:2},{value:"renderRadius",id:"renderradius",level:3},{value:"Returns",id:"returns-42",level:4},{value:"Parameters",id:"parameters-40",level:4},{value:"Returns",id:"returns-43",level:4}],k={toc:d};function m(e){let{components:t,...l}=e;return(0,r.kt)("wrapper",(0,n.Z)({},k,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"A Voxelize world handles the chunk loading and rendering, as well as any 3D objects.\n",(0,r.kt)("strong",{parentName:"p"},"This class extends the ",(0,r.kt)("a",{parentName:"strong",href:"https://threejs.org/docs/#api/en/scenes/Scene"},"ThreeJS ",(0,r.kt)("inlineCode",{parentName:"a"},"Scene")," class"),"."),"\nThis means that you can add any ThreeJS objects to the world, and they will be rendered. The world\nalso implements ",(0,r.kt)("a",{parentName:"p",href:"/api/client/interfaces/NetIntercept"},"NetIntercept"),", which means it intercepts chunk-related packets from the server\nand constructs chunk meshes from them."),(0,r.kt)("p",null,"There are a couple important components that are by default created by the world:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/api/client/classes/World#registry"},"registry"),": A block registry that handles block textures and block instances."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/api/client/classes/World#chunks"},"chunks"),": A chunk manager that stores all the chunks in the world."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/api/client/classes/World#physics"},"physics"),": A physics engine that handles voxel AABB physics simulation of client-side physics."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/api/client/classes/World#loader"},"loader"),": An asset loader that handles loading textures and other assets."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/api/client/classes/World#atlas"},"atlas"),": A texture atlas that handles texture packing.")),(0,r.kt)("p",null,"One thing to keep in mind that there are no specific setters like ",(0,r.kt)("inlineCode",{parentName:"p"},"setVoxelByVoxel")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"setVoxelRotationByVoxel"),".\nThis is because, instead, you should use ",(0,r.kt)("inlineCode",{parentName:"p"},"updateVoxel")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"updateVoxels")," to update voxels."),(0,r.kt)("h1",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'const world = new VOXELIZE.World();\n\n// Update a voxel in the world across the network.\nworld.updateVoxel({\n  vx: 0,\n  vy: 0,\n  vz: 0,\n  type: 12,\n});\n\n// Register the interceptor with the network.\nnetwork.register(world);\n\n// Register an image to block sides.\nworld.registry.applyTextureByName({\n  name: "Test",\n  sides: VOXELIZE.ALL_FACES,\n  data: "https://example.com/test.png"\n});\n\n// Update the world every frame.\nworld.update(controls.object.position);\n')),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"World",src:a(8609).Z,width:"3456",height:"2158"})),(0,r.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Scene")),(0,r.kt)("p",{parentName:"li"},"\u21b3 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"World"))))),(0,r.kt)("h2",{id:"implements"},"Implements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/api/client/interfaces/NetIntercept"},(0,r.kt)("inlineCode",{parentName:"a"},"NetIntercept")))),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("h3",{id:"addchunkinitlistener"},"addChunkInitListener"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"addChunkInitListener"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"coords"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"listener"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"Add a listener to a chunk. This listener will be called when this chunk is loaded and ready to be rendered.\nThis is useful for, for example, teleporting the player to the top of the chunk when the player just joined."),(0,r.kt)("h4",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"coords")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/api/client/modules#coords2"},(0,r.kt)("inlineCode",{parentName:"a"},"Coords2"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The chunk coordinates to listen to.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"listener")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"chunk"),": ",(0,r.kt)("a",{parentName:"td",href:"/api/client/classes/Chunk"},(0,r.kt)("inlineCode",{parentName:"a"},"Chunk")),") => ",(0,r.kt)("inlineCode",{parentName:"td"},"void")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The listener to add.")))),(0,r.kt)("h4",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"applytexturebyname"},"applyTextureByName"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"applyTextureByName"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"texture"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"Apply a texture onto a face/side of a block."),(0,r.kt)("h4",{id:"parameters-1"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"texture")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/api/client/modules#texturedata"},(0,r.kt)("inlineCode",{parentName:"a"},"TextureData"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The data of the texture and where the texture is applying to.")))),(0,r.kt)("h4",{id:"returns-1"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"applytexturesbynames"},"applyTexturesByNames"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"applyTexturesByNames"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"textures"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"Apply a list of textures to a list of blocks' faces. The textures are loaded in before the game starts."),(0,r.kt)("h4",{id:"parameters-2"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"textures")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/api/client/modules#texturedata"},(0,r.kt)("inlineCode",{parentName:"a"},"TextureData")),"[]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"List of data to load into the game before the game starts.")))),(0,r.kt)("h4",{id:"returns-2"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getblockaabbsbyvoxel"},"getBlockAABBsByVoxel"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"getBlockAABBsByVoxel"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"vx"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"vy"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"vz"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"ignoreFluid?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"AABB"),"[]"),(0,r.kt)("p",null,"Get the block AABBs by the given 3D voxel coordinate."),(0,r.kt)("h4",{id:"parameters-3"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vx")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's X position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vy")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's Y position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vz")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's Z position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ignoreFluid")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"false")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to ignore fluid blocks.")))),(0,r.kt)("h4",{id:"returns-3"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"AABB"),"[]"),(0,r.kt)("p",null,"The AABB of the block at the given coordinate."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getblockaabbsbyworld"},"getBlockAABBsByWorld"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"getBlockAABBsByWorld"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"wx"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"wy"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"wz"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"ignoreFluid?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"AABB"),"[]"),(0,r.kt)("p",null,"Get the block AABBs by the given 3D world coordinate."),(0,r.kt)("h4",{id:"parameters-4"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"wx")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's un-floored X position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"wy")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's un-floored Y position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"wz")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's un-floored Z position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ignoreFluid")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"false")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Whether to ignore fluid blocks.")))),(0,r.kt)("h4",{id:"returns-4"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"AABB"),"[]"),(0,r.kt)("p",null,"The AABB of the block at the given coordinate."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getblockbyid"},"getBlockById"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"getBlockById"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"id"),"): ",(0,r.kt)("a",{parentName:"p",href:"/api/client/modules#block"},(0,r.kt)("inlineCode",{parentName:"a"},"Block"))),(0,r.kt)("p",null,"Get the block information by its ID."),(0,r.kt)("h4",{id:"parameters-5"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"id")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The ID of the block to get.")))),(0,r.kt)("h4",{id:"returns-5"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/client/modules#block"},(0,r.kt)("inlineCode",{parentName:"a"},"Block"))),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getblockbyname"},"getBlockByName"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"getBlockByName"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"name"),"): ",(0,r.kt)("a",{parentName:"p",href:"/api/client/modules#block"},(0,r.kt)("inlineCode",{parentName:"a"},"Block"))),(0,r.kt)("p",null,"Get the block information by its name."),(0,r.kt)("h4",{id:"parameters-6"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"name")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The name of the block to get.")))),(0,r.kt)("h4",{id:"returns-6"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/client/modules#block"},(0,r.kt)("inlineCode",{parentName:"a"},"Block"))),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getblockbytexturename"},"getBlockByTextureName"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"getBlockByTextureName"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"textureName"),"): ",(0,r.kt)("a",{parentName:"p",href:"/api/client/modules#block"},(0,r.kt)("inlineCode",{parentName:"a"},"Block"))),(0,r.kt)("p",null,"Reverse engineer to get the block information from a texture name."),(0,r.kt)("h4",{id:"parameters-7"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"textureName")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The texture name that the block has.")))),(0,r.kt)("h4",{id:"returns-7"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/client/modules#block"},(0,r.kt)("inlineCode",{parentName:"a"},"Block"))),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getblockbyvoxel"},"getBlockByVoxel"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"getBlockByVoxel"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"vx"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"vy"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"vz"),"): ",(0,r.kt)("a",{parentName:"p",href:"/api/client/modules#block"},(0,r.kt)("inlineCode",{parentName:"a"},"Block"))),(0,r.kt)("p",null,"Get the block data at the given 3D voxel coordinate."),(0,r.kt)("h4",{id:"parameters-8"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vx")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's X position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vy")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's Y position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vz")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's Z position.")))),(0,r.kt)("h4",{id:"returns-8"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/client/modules#block"},(0,r.kt)("inlineCode",{parentName:"a"},"Block"))),(0,r.kt)("p",null,"The block type data at the given coordinate."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getblockbyworld"},"getBlockByWorld"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"getBlockByWorld"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"wx"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"wy"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"wz"),"): ",(0,r.kt)("a",{parentName:"p",href:"/api/client/modules#block"},(0,r.kt)("inlineCode",{parentName:"a"},"Block"))),(0,r.kt)("p",null,"Get the block data at the given 3D world coordinate."),(0,r.kt)("h4",{id:"parameters-9"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"wx")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's un-floored X position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"wy")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's un-floored Y position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"wz")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's un-floored Z position.")))),(0,r.kt)("h4",{id:"returns-9"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/client/modules#block"},(0,r.kt)("inlineCode",{parentName:"a"},"Block"))),(0,r.kt)("p",null,"The block type data at the given coordinate."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getchunk"},"getChunk"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"getChunk"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"cx"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"cz"),"): ",(0,r.kt)("a",{parentName:"p",href:"/api/client/classes/Chunk"},(0,r.kt)("inlineCode",{parentName:"a"},"Chunk"))),(0,r.kt)("p",null,"Get a chunk instance by its 2D coordinates."),(0,r.kt)("h4",{id:"parameters-10"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"cx")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The 2D chunk X position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"cz")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The 2D chunk Z position.")))),(0,r.kt)("h4",{id:"returns-10"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/client/classes/Chunk"},(0,r.kt)("inlineCode",{parentName:"a"},"Chunk"))),(0,r.kt)("p",null,"The chunk at the given coordinate."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getchunkbyname"},"getChunkByName"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"getChunkByName"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"name"),"): ",(0,r.kt)("a",{parentName:"p",href:"/api/client/classes/Chunk"},(0,r.kt)("inlineCode",{parentName:"a"},"Chunk"))),(0,r.kt)("p",null,"Get a chunk instance by its coordinate representation."),(0,r.kt)("h4",{id:"parameters-11"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"name")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The 2D coordinate representation of the chunk.")))),(0,r.kt)("h4",{id:"returns-11"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/client/classes/Chunk"},(0,r.kt)("inlineCode",{parentName:"a"},"Chunk"))),(0,r.kt)("p",null,"The chunk at the given coordinate."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getchunkbyvoxel"},"getChunkByVoxel"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"getChunkByVoxel"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"vx"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"vy"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"vz"),"): ",(0,r.kt)("a",{parentName:"p",href:"/api/client/classes/Chunk"},(0,r.kt)("inlineCode",{parentName:"a"},"Chunk"))),(0,r.kt)("p",null,"Get a chunk by a 3D voxel coordinate."),(0,r.kt)("h4",{id:"parameters-12"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vx")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's X position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vy")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's Y position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vz")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's Z position.")))),(0,r.kt)("h4",{id:"returns-12"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/client/classes/Chunk"},(0,r.kt)("inlineCode",{parentName:"a"},"Chunk"))),(0,r.kt)("p",null,"The chunk at the given voxel coordinate."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getlightcolorbyvoxel"},"getLightColorByVoxel"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"getLightColorByVoxel"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"vx"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"vy"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"vz"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Color")),(0,r.kt)("p",null,"Get a color instance that represents what an object would be like\nif it were rendered at the given 3D voxel coordinate. This is useful\nto dynamically shade objects based on their position in the world. Also\nused in ",(0,r.kt)("a",{parentName:"p",href:"/api/client/classes/LightShined"},"LightShined"),"."),(0,r.kt)("h4",{id:"parameters-13"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vx")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's X position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vy")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's Y position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vz")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's Z position.")))),(0,r.kt)("h4",{id:"returns-13"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Color")),(0,r.kt)("p",null,"The voxel's light color at the given coordinate."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getlightcolorbyworld"},"getLightColorByWorld"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"getLightColorByWorld"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"wx"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"wy"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"wz"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Color")),(0,r.kt)("p",null,"Get a color instance that represents what an object would be like if it\nwere rendered at the given 3D world coordinate. This is useful to dynamically\nshade objects based on their position in the world. Also used in ",(0,r.kt)("a",{parentName:"p",href:"/api/client/classes/LightShined"},"LightShined"),"."),(0,r.kt)("h4",{id:"parameters-14"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"wx")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's un-floored X position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"wy")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's un-floored Y position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"wz")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's un-floored Z position.")))),(0,r.kt)("h4",{id:"returns-14"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Color")),(0,r.kt)("p",null,"The voxel's light color at the given coordinate."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getmaxheightbyvoxel"},"getMaxHeightByVoxel"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"getMaxHeightByVoxel"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"vx"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"vz"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"Get the maximum height of the block column at the given 3D voxel coordinate."),(0,r.kt)("h4",{id:"parameters-15"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vx")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's X position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vz")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's Z position.")))),(0,r.kt)("h4",{id:"returns-15"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The max height at the given coordinate."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getmaxheightbyworld"},"getMaxHeightByWorld"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"getMaxHeightByWorld"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"wx"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"wz"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"Get the maximum height of the block column at the given 3D world coordinate."),(0,r.kt)("h4",{id:"parameters-16"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"wx")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's un-floored X position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"wz")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's un-floored Z position.")))),(0,r.kt)("h4",{id:"returns-16"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The max height at the given coordinate."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getminbrightness"},"getMinBrightness"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"getMinBrightness"),"(): ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"Get the uniform value of the minimum brightness at sunlight ",(0,r.kt)("inlineCode",{parentName:"p"},"0")," voxels."),(0,r.kt)("h4",{id:"returns-17"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The minimum brightness of the chunk."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getpreviousvoxelbyvoxel"},"getPreviousVoxelByVoxel"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"getPreviousVoxelByVoxel"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"vx"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"vy"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"vz"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"Get the previous voxel ID before the latest update was made."),(0,r.kt)("h4",{id:"parameters-17"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vx")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's X position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vy")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's Y position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vz")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's Z position.")))),(0,r.kt)("h4",{id:"returns-18"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The voxel ID that was previously at the given coordinate."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getpreviousvoxelbyworld"},"getPreviousVoxelByWorld"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"getPreviousVoxelByWorld"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"wx"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"wy"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"wz"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"Get the previous voxel ID before the latest update was made."),(0,r.kt)("h4",{id:"parameters-18"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"wx")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's un-floored X position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"wy")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's un-floored Y position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"wz")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's un-floored Z position.")))),(0,r.kt)("h4",{id:"returns-19"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The voxel ID that was previously at the given coordinate."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getsunlightbyvoxel"},"getSunlightByVoxel"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"getSunlightByVoxel"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"vx"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"vy"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"vz"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"Get the voxel's sunlight level at the given 3D voxel coordinate."),(0,r.kt)("h4",{id:"parameters-19"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vx")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's X position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vy")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's Y position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vz")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's Z position.")))),(0,r.kt)("h4",{id:"returns-20"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The voxel's sunlight level at the given coordinate."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getsunlightbyworld"},"getSunlightByWorld"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"getSunlightByWorld"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"wx"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"wy"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"wz"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"Get the voxel's sunlight level at the given 3D world coordinate."),(0,r.kt)("h4",{id:"parameters-20"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"wx")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's un-floored X position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"wy")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's un-floored Y position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"wz")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's un-floored Z position.")))),(0,r.kt)("h4",{id:"returns-21"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The voxel's sunlight level at the given coordinate."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getsunlightintensity"},"getSunlightIntensity"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"getSunlightIntensity"),"(): ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"Get the uniform value of the intensity of sunlight."),(0,r.kt)("h4",{id:"returns-22"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The intensity of the sun."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"gettorchlightbyvoxel"},"getTorchLightByVoxel"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"getTorchLightByVoxel"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"vx"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"vy"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"vz"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"color"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"Get the voxel's torch light level at the given 3D voxel coordinate."),(0,r.kt)("h4",{id:"parameters-21"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vx")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's X position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vy")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's Y position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vz")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's Z position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"color")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/api/client/modules#lightcolor"},(0,r.kt)("inlineCode",{parentName:"a"},"LightColor"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The color of the torch light to get.")))),(0,r.kt)("h4",{id:"returns-23"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The voxel's torch light level at the given coordinate."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"gettorchlightbyworld"},"getTorchLightByWorld"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"getTorchLightByWorld"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"wx"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"wy"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"wz"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"color"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"Get the voxel's torch light level at the given 3D world coordinate."),(0,r.kt)("h4",{id:"parameters-22"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"wx")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's un-floored X position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"wy")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's un-floored Y position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"wz")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's un-floored Z position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"color")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/api/client/modules#lightcolor"},(0,r.kt)("inlineCode",{parentName:"a"},"LightColor"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The color of the torch light to get.")))),(0,r.kt)("h4",{id:"returns-24"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The voxel's torch light level at the given coordinate."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getvoxelbyvoxel"},"getVoxelByVoxel"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"getVoxelByVoxel"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"vx"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"vy"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"vz"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"Get the voxel ID at the given 3D voxel coordinate."),(0,r.kt)("h4",{id:"parameters-23"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vx")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's X position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vy")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's Y position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vz")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's Z position.")))),(0,r.kt)("h4",{id:"returns-25"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The voxel's ID at the given coordinate."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getvoxelbyworld"},"getVoxelByWorld"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"getVoxelByWorld"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"wx"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"wy"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"wz"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"Get the voxel ID at the given 3D world coordinate."),(0,r.kt)("h4",{id:"parameters-24"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"wx")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's un-floored X position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"wy")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's un-floored Y position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"wz")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's un-floored Z position.")))),(0,r.kt)("h4",{id:"returns-26"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The voxel's ID at the given coordinate."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getvoxelrotationbyvoxel"},"getVoxelRotationByVoxel"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"getVoxelRotationByVoxel"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"vx"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"vy"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"vz"),"): ",(0,r.kt)("a",{parentName:"p",href:"/api/client/classes/BlockRotation"},(0,r.kt)("inlineCode",{parentName:"a"},"BlockRotation"))),(0,r.kt)("p",null,"Get the voxel rotation at the given 3D voxel coordinate."),(0,r.kt)("h4",{id:"parameters-25"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vx")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's X position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vy")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's Y position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vz")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's Z position.")))),(0,r.kt)("h4",{id:"returns-27"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/client/classes/BlockRotation"},(0,r.kt)("inlineCode",{parentName:"a"},"BlockRotation"))),(0,r.kt)("p",null,"The voxel's rotation at the given coordinate."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getvoxelrotationbyworld"},"getVoxelRotationByWorld"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"getVoxelRotationByWorld"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"wx"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"wy"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"wz"),"): ",(0,r.kt)("a",{parentName:"p",href:"/api/client/classes/BlockRotation"},(0,r.kt)("inlineCode",{parentName:"a"},"BlockRotation"))),(0,r.kt)("p",null,"Get the voxel rotation at the given 3D world coordinate."),(0,r.kt)("h4",{id:"parameters-26"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"wx")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's un-floored X position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"wy")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's un-floored Y position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"wz")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's un-floored Z position.")))),(0,r.kt)("h4",{id:"returns-28"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/client/classes/BlockRotation"},(0,r.kt)("inlineCode",{parentName:"a"},"BlockRotation"))),(0,r.kt)("p",null,"The voxel's rotation at the given coordinate."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getvoxelstagebyvoxel"},"getVoxelStageByVoxel"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"getVoxelStageByVoxel"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"vx"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"vy"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"vz"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"Get the voxel's stage at the given 3D voxel coordinate."),(0,r.kt)("h4",{id:"parameters-27"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vx")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's X position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vy")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's Y position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vz")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's Z position.")))),(0,r.kt)("h4",{id:"returns-29"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The voxel stage at the given coordinate."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getvoxelstagebyworld"},"getVoxelStageByWorld"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"getVoxelStageByWorld"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"wx"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"wy"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"wz"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"Get the voxel's stage at the given 3D world coordinate."),(0,r.kt)("h4",{id:"parameters-28"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"wx")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's un-floored X position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"wy")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's un-floored Y position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"wz")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's un-floored Z position.")))),(0,r.kt)("h4",{id:"returns-30"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The voxel stage at the given coordinate."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"ischunkinview"},"isChunkInView"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"isChunkInView"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"cx"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"cz"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"dx"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"dz"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"This checks if the chunk is within the given x/z directions by testing of the given chunk\ncoordinate is within ",(0,r.kt)("inlineCode",{parentName:"p"},"3 * Math.PI / 5")," radians of the given direction."),(0,r.kt)("h4",{id:"parameters-29"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"cx")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The chunk's X position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"cz")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The chunk's Z position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"dx")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The x direction that is being checked.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"dz")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The z direction that is being checked.")))),(0,r.kt)("h4",{id:"returns-31"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Whether or not the chunk is within the render view."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"iswithinworld"},"isWithinWorld"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"isWithinWorld"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"cx"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"cz"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Whether or not if this chunk coordinate is within (inclusive) the world's bounds. That is, if this chunk coordinate\nis within ",(0,r.kt)("a",{parentName:"p",href:"/api/client/modules#worldserverparams"},"WorldServerParams.minChunk")," and ",(0,r.kt)("a",{parentName:"p",href:"/api/client/modules#worldserverparams"},"WorldServerParams.maxChunk"),"."),(0,r.kt)("h4",{id:"parameters-30"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"cx")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The chunk's X position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"cz")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The chunk's Z position.")))),(0,r.kt)("h4",{id:"returns-32"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Whether or not this chunk is within the bounds of the world."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"makeblockmesh"},"makeBlockMesh"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"makeBlockMesh"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"id"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Mesh"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"BufferGeometry"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"MeshBasicMaterial"),">"),(0,r.kt)("p",null,"Get a mesh of the model of the given block."),(0,r.kt)("h4",{id:"parameters-31"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"id")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The ID of the block.")))),(0,r.kt)("h4",{id:"returns-33"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Mesh"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"BufferGeometry"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"MeshBasicMaterial"),">"),(0,r.kt)("p",null,"A 3D mesh of the block model."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"reset"},"reset"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"reset"),"(): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"Reset the world's chunk and block caches."),(0,r.kt)("h4",{id:"returns-34"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"setfogcolor"},"setFogColor"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"setFogColor"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"color"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"Set the fog color that is applied to the chunks."),(0,r.kt)("h4",{id:"parameters-32"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"color")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Color")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The color reference to link the fog to.")))),(0,r.kt)("h4",{id:"returns-35"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"setfogdistance"},"setFogDistance"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"setFogDistance"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"distance"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"Set the farthest distance for the fog. Fog starts fogging up the chunks 50% from the farthest."),(0,r.kt)("h4",{id:"parameters-33"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"distance")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The maximum distance that the fog fully fogs up.")))),(0,r.kt)("h4",{id:"returns-36"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"setminbrightness"},"setMinBrightness"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"setMinBrightness"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"minBrightness"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"Set the uniform value of the minimum brightness at sunlight level of ",(0,r.kt)("inlineCode",{parentName:"p"},"0")," voxels."),(0,r.kt)("h4",{id:"parameters-34"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"minBrightness")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The minimum brightness value.")))),(0,r.kt)("h4",{id:"returns-37"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"setsunlightintensity"},"setSunlightIntensity"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"setSunlightIntensity"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"intensity"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"Set the uniform value of the intensity of sunlight."),(0,r.kt)("h4",{id:"parameters-35"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"intensity")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The intensity of the sun.")))),(0,r.kt)("h4",{id:"returns-38"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"update"},"update"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"update"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"center"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"The updater of the world. This requests the chunks around the given coordinates and meshes any\nnew chunks that are received from the server. This should be called every frame."),(0,r.kt)("h4",{id:"parameters-36"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"center")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Vector3")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The center of the update. That is, the center that the chunks should    be requested around.")))),(0,r.kt)("h4",{id:"returns-39"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"updatevoxel"},"updateVoxel"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"updateVoxel"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"vx"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"vy"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"vz"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"rotation?"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"yRotation?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"This sends a block update to the server and updates across the network. Block updates are queued to\n",(0,r.kt)("a",{parentName:"p",href:"/api/client/classes/World#chunks"},"World.chunks.toUpdate")," and scaffolded to the server ",(0,r.kt)("a",{parentName:"p",href:"/api/client/modules#worldclientparams"},"WorldClientParams.maxUpdatesPerTick")," times\nper tick. Keep in mind that for rotation and y-rotation, the value should be one of the following:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Rotation: ",(0,r.kt)("a",{parentName:"li",href:"/api/client/modules#px_rotation"},"PX_ROTATION")," | ",(0,r.kt)("a",{parentName:"li",href:"/api/client/modules#nx_rotation"},"NX_ROTATION")," | ",(0,r.kt)("a",{parentName:"li",href:"/api/client/modules#py_rotation"},"PY_ROTATION")," | ",(0,r.kt)("a",{parentName:"li",href:"/api/client/modules#ny_rotation"},"NY_ROTATION")," | ",(0,r.kt)("a",{parentName:"li",href:"/api/client/modules#pz_rotation"},"PZ_ROTATION")," | ",(0,r.kt)("a",{parentName:"li",href:"/api/client/modules#nz_rotation"},"NZ_ROTATION")),(0,r.kt)("li",{parentName:"ul"},"Y-rotation: 0 to ",(0,r.kt)("a",{parentName:"li",href:"/api/client/modules#y_rot_segments"},"Y_ROT_SEGMENTS")," - 1.")),(0,r.kt)("p",null,"This ignores blocks that are not defined, and also ignores rotations for blocks that are not ",(0,r.kt)("a",{parentName:"p",href:"/api/client/modules#block"},"Block.rotatable")," (Same for if\nblock is not ",(0,r.kt)("a",{parentName:"p",href:"/api/client/modules#block"},"Block.yRotatable"),")."),(0,r.kt)("h4",{id:"parameters-37"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vx")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's X position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vy")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's Y position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"vz")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The voxel's Z position.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"type")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The type of the voxel.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"rotation")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"PY_ROTATION")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The major axis rotation of the voxel.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"yRotation")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"0")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The Y rotation on the major axis. Applies to blocks with major axis of PY or NY.")))),(0,r.kt)("h4",{id:"returns-40"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"updatevoxels"},"updateVoxels"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"updateVoxels"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"updates"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"This sends a list of block updates to the server and updates across the network. Block updates are queued to\n",(0,r.kt)("a",{parentName:"p",href:"/api/client/classes/World#chunks"},"World.chunks.toUpdate")," and scaffolded to the server ",(0,r.kt)("a",{parentName:"p",href:"/api/client/modules#worldclientparams"},"WorldClientParams.maxUpdatesPerTick")," times\nper tick. Keep in mind that for rotation and y-rotation, the value should be one of the following:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Rotation: ",(0,r.kt)("a",{parentName:"li",href:"/api/client/modules#px_rotation"},"PX_ROTATION")," | ",(0,r.kt)("a",{parentName:"li",href:"/api/client/modules#nx_rotation"},"NX_ROTATION")," | ",(0,r.kt)("a",{parentName:"li",href:"/api/client/modules#py_rotation"},"PY_ROTATION")," | ",(0,r.kt)("a",{parentName:"li",href:"/api/client/modules#ny_rotation"},"NY_ROTATION")," | ",(0,r.kt)("a",{parentName:"li",href:"/api/client/modules#pz_rotation"},"PZ_ROTATION")," | ",(0,r.kt)("a",{parentName:"li",href:"/api/client/modules#nz_rotation"},"NZ_ROTATION")),(0,r.kt)("li",{parentName:"ul"},"Y-rotation: 0 to ",(0,r.kt)("a",{parentName:"li",href:"/api/client/modules#y_rot_segments"},"Y_ROT_SEGMENTS")," - 1.")),(0,r.kt)("p",null,"This ignores blocks that are not defined, and also ignores rotations for blocks that are not ",(0,r.kt)("a",{parentName:"p",href:"/api/client/modules#block"},"Block.rotatable")," (Same for if\nblock is not ",(0,r.kt)("a",{parentName:"p",href:"/api/client/modules#block"},"Block.yRotatable"),")."),(0,r.kt)("h4",{id:"parameters-38"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"updates")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/api/client/modules#blockupdate"},(0,r.kt)("inlineCode",{parentName:"a"},"BlockUpdate")),"[]"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A list of updates to send to the server.")))),(0,r.kt)("h4",{id:"returns-41"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("h3",{id:"atlas"},"atlas"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"atlas"),": ",(0,r.kt)("a",{parentName:"p",href:"/api/client/classes/TextureAtlas"},(0,r.kt)("inlineCode",{parentName:"a"},"TextureAtlas"))),(0,r.kt)("p",null,"The generated texture atlas built from all registered block textures."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"blockcache"},"blockCache"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"blockCache"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Map"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),">"),(0,r.kt)("p",null,"This is a map that keeps track of the block IDs before they are updated to any new block IDs.\nUse ",(0,r.kt)("a",{parentName:"p",href:"/api/client/classes/World#getpreviousvoxelbyvoxel"},"getPreviousVoxelByVoxel")," and ",(0,r.kt)("a",{parentName:"p",href:"/api/client/classes/World#getpreviousvoxelbyworld"},"getPreviousVoxelByWorld")," to get the previous\nblock ID, if it exists."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"chunks"},"chunks"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"chunks"),": ",(0,r.kt)("a",{parentName:"p",href:"/api/client/classes/Chunks"},(0,r.kt)("inlineCode",{parentName:"a"},"Chunks"))),(0,r.kt)("p",null,"A chunk manager that stores useful information about chunks, such as the chunk mesh and chunk data."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"initialized"},"initialized"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"initialized"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")," = ",(0,r.kt)("inlineCode",{parentName:"p"},"false")),(0,r.kt)("p",null,"Whether or not this world is connected to a server and has configurations and block data loaded from the server."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"loader"},"loader"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"loader"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Loader")),(0,r.kt)("p",null,"An asset loader that handles loading textures and other assets."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"materials"},"materials"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"materials"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")," = ",(0,r.kt)("inlineCode",{parentName:"p"},"{}")),(0,r.kt)("p",null,"The shared material instances for chunks."),(0,r.kt)("h4",{id:"type-declaration"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opaque?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/api/client/modules#customshadermaterial"},(0,r.kt)("inlineCode",{parentName:"a"},"CustomShaderMaterial"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The chunk material that is used to render the opaque portions of the chunk meshes.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"transparent?")),(0,r.kt)("td",{parentName:"tr",align:"left"},"{ ",(0,r.kt)("inlineCode",{parentName:"td"},"back"),": ",(0,r.kt)("a",{parentName:"td",href:"/api/client/modules#customshadermaterial"},(0,r.kt)("inlineCode",{parentName:"a"},"CustomShaderMaterial"))," ; ",(0,r.kt)("inlineCode",{parentName:"td"},"front"),": ",(0,r.kt)("a",{parentName:"td",href:"/api/client/modules#customshadermaterial"},(0,r.kt)("inlineCode",{parentName:"a"},"CustomShaderMaterial")),"  }"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The chunk materials that are used to render the transparent portions of the chunk meshes. This consists of two sides of the chunk mesh, front and back.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"transparent.back")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/api/client/modules#customshadermaterial"},(0,r.kt)("inlineCode",{parentName:"a"},"CustomShaderMaterial"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The back side of the chunk mesh's transparent material.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"transparent.front")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/api/client/modules#customshadermaterial"},(0,r.kt)("inlineCode",{parentName:"a"},"CustomShaderMaterial"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The front side of the chunk mesh's transparent material.")))),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"params"},"params"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"params"),": ",(0,r.kt)("a",{parentName:"p",href:"/api/client/modules#worldparams"},(0,r.kt)("inlineCode",{parentName:"a"},"WorldParams"))," = ",(0,r.kt)("inlineCode",{parentName:"p"},"{}")),(0,r.kt)("p",null,"Parameters to configure the world. This is a combination of the client-side parameters, ",(0,r.kt)("a",{parentName:"p",href:"/api/client/modules#worldclientparams"},"WorldClientParams"),",\nand the server-side parameters, ",(0,r.kt)("a",{parentName:"p",href:"/api/client/modules#worldserverparams"},"WorldServerParams"),". The server-side parameters are defined on the server, and\nare sent to the client when the client connects to the server."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"physics"},"physics"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"physics"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Engine")),(0,r.kt)("p",null,"A voxel AABB physics engine that handles physics simulation of client-side physics. You can use ",(0,r.kt)("inlineCode",{parentName:"p"},"world.physics.iterateBody"),"\nindividually to iterate over a rigid body."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"registry"},"registry"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"registry"),": ",(0,r.kt)("a",{parentName:"p",href:"/api/client/classes/Registry"},(0,r.kt)("inlineCode",{parentName:"a"},"Registry"))),(0,r.kt)("p",null,"The block registry that handles block textures and block instances."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"uniforms"},"uniforms"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"uniforms"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"The WebGL uniforms that are used in the chunk shader."),(0,r.kt)("h4",{id:"type-declaration-1"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ao")),(0,r.kt)("td",{parentName:"tr",align:"left"},"{ ",(0,r.kt)("inlineCode",{parentName:"td"},"value"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"Vector4"),"  }"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The ambient occlusion levels that are applied onto the chunk meshes. Check out ",(0,r.kt)("a",{parentName:"td",href:"https://0fps.net/2013/07/03/ambient-occlusion-for-minecraft-like-worlds/"},"this article")," for more information on ambient occlusion for voxel worlds. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"new Vector4(100.0, 170.0, 210.0, 255.0)"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ao.value")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Vector4")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The value passed into the chunk shader.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"atlas")),(0,r.kt)("td",{parentName:"tr",align:"left"},"{ ",(0,r.kt)("inlineCode",{parentName:"td"},"value"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"Texture"),"  }"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The 2D texture atlas that is used to render the chunk. This will be set after ",(0,r.kt)("a",{parentName:"td",href:"/api/client/classes/World#atlas"},"atlas")," is generated.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"atlas.value")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Texture")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The value passed into the chunk shader.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fogColor")),(0,r.kt)("td",{parentName:"tr",align:"left"},"{ ",(0,r.kt)("inlineCode",{parentName:"td"},"value"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"Color"),"  }"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The fog color that is applied onto afar chunks. It is recommended to set this to the middle color of the sky. Defaults to a new THREE.JS white color instance.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fogColor.value")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Color")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The value passed into the chunk shader.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fogFar")),(0,r.kt)("td",{parentName:"tr",align:"left"},"{ ",(0,r.kt)("inlineCode",{parentName:"td"},"value"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),"  }"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The far distance of the fog. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"200")," units.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fogFar.value")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The value passed into the chunk shader.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fogNear")),(0,r.kt)("td",{parentName:"tr",align:"left"},"{ ",(0,r.kt)("inlineCode",{parentName:"td"},"value"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),"  }"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The near distance of the fog. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"100")," units.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fogNear.value")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The value passed into the chunk shader.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"minBrightness")),(0,r.kt)("td",{parentName:"tr",align:"left"},"{ ",(0,r.kt)("inlineCode",{parentName:"td"},"value"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),"  }"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The minimum brightness of the world at light level ",(0,r.kt)("inlineCode",{parentName:"td"},"0"),". Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"0.2"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"minBrightness.value")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The value passed into the chunk shader.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"sunlightIntensity")),(0,r.kt)("td",{parentName:"tr",align:"left"},"{ ",(0,r.kt)("inlineCode",{parentName:"td"},"value"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"number"),"  }"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The sunlight intensity of the world. Changing this to ",(0,r.kt)("inlineCode",{parentName:"td"},"0")," would effectively simulate night time in Voxelize. Defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"1.0"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"sunlightIntensity.value")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The value passed into the chunk shader.")))),(0,r.kt)("h2",{id:"constructors"},"Constructors"),(0,r.kt)("h3",{id:"constructor"},"constructor"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"new World"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"params?"),")"),(0,r.kt)("p",null,"Create a new world instance."),(0,r.kt)("h4",{id:"parameters-39"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"params")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Partial"),"<",(0,r.kt)("a",{parentName:"td",href:"/api/client/modules#worldclientparams"},(0,r.kt)("inlineCode",{parentName:"a"},"WorldClientParams")),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The client-side parameters to configure the world.")))),(0,r.kt)("h4",{id:"overrides"},"Overrides"),(0,r.kt)("p",null,"Scene.constructor"),(0,r.kt)("h2",{id:"accessors"},"Accessors"),(0,r.kt)("h3",{id:"renderradius"},"renderRadius"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"get")," ",(0,r.kt)("strong",{parentName:"p"},"renderRadius"),"(): ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The render radius that this world is requesting chunks at."),(0,r.kt)("h4",{id:"returns-42"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"set")," ",(0,r.kt)("strong",{parentName:"p"},"renderRadius"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"radius"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"Set the render radius that this world is requesting chunks at."),(0,r.kt)("h4",{id:"parameters-40"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"radius")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number"))))),(0,r.kt)("h4",{id:"returns-43"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")))}m.isMDXComponent=!0},8609:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/world-de99a45db7416d9e74fcb8d1dbf3c0b9.png"}}]);